apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def getTag(){
    def tmpTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
    if(tmpTag == ""){
        return '0.1'
    }

    return tmpTag
}

def getCommitCount(){
    def tmpCommitCount = 'git rev-list --count HEAD'.execute([], project.rootDir).text.trim()

    if(tmpCommitCount == ""){
        return 100
    }

    return 100 + Integer.parseInt(tmpCommitCount)
}

def getApiKey() {
    def apiKeyFile = file('secret.properties')
    if (apiKeyFile.canRead()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(apiKeyFile))
        return props['API_KEY']
    } else {
        throw new GradleException("Missing api key. Could not read from secret.properties!")
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.ilkayaktas.fivehundredpxclient"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getCommitCount()
        versionName getTag()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        android.defaultConfig.vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all {
            variant -> variant.buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
        }

    }

    packagingOptions{
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Appcompat and Constraint Layout
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintsLibraryVersion" // Constraints layout
    compile "com.android.support:design:$rootProject.supportLibraryVersion" // snackbar, floating action bar
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion" // Cardview

    // Test
    testCompile "junit:junit:$rootProject.junitVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })

    // Dagger
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    // Butterknife
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // EventBus
    compile "org.greenrobot:eventbus:$rootProject.eventBusVersion"

    // Jelly Toolbar
    compile "com.github.yalantis:jellytoolbar:$rootProject.jellyToolbar"

    // Animation library
    compile 'com.android.support:support-compat:25.3.1'
    compile 'com.daimajia.easing:library:2.0@aar'
    compile 'com.daimajia.androidanimations:library:2.3@aar'

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retroFitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retroFitVersion"
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    // RXJava
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // RXJava Retrofit adapter
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.rxjavaAdapterVersion"

//    // Guava
//    compile "com.google.guava:guava:$rootProject.guavaVersion"

    // Picasso
    compile "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    // PhotoView for zoom in out
    compile "com.github.chrisbanes:PhotoView:$rootProject.photoViewVersion"

    // Greedo 500px
    compile "com.fivehundredpx:greedo-layout:$rootProject.greedoVersion"

    // Floating Action Button
    compile "io.github.yavski:fab-speed-dial:$rootProject.fabVersion"

    // Permission Dispatchxer
    compile("com.github.hotchemi:permissionsdispatcher:$rootProject.permissionDispatcherVersion") {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v7"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:$rootProject.permissionDispatcherVersion"

    // Spark Button
    compile "com.github.varunest:sparkbutton:$rootProject.sparkButtonVersion"

    // Glide
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Toasty
    compile "com.github.GrenderG:Toasty:$rootProject.toastyVersion"
}
